name: Pull Request Checks

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20] # Prueba múltiples versiones de Node.js

    steps:
    # 1. Checkout el código del repositorio
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Cache de módulos Node.js
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('labselector/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # 3. Configuración de Node.js para el frontend
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # 4. Instalar dependencias del frontend
    - name: Install frontend dependencies
      working-directory: labselector
      run: npm install

    # 5. Ejecutar linter en el frontend
    - name: Run linter (frontend)
      working-directory: labselector
      run: npm run lint

    # 6. Ejecutar pruebas en el frontend
    #- name: Run tests (frontend)
    #  working-directory: labselector
    #  run: npm test

    # 7. Configurar Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    # 8. Instalar dependencias del backend
    - name: Install backend dependencies
      working-directory: app
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
